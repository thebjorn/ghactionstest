name: CI/CD Pipeline

on: [ push, pull_request, workflow_dispatch ]

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch}}
  PIP_CACHE_DIR: /tmp/pipcache
  RELEASE_OS: ubuntu-latest
  RELEASE_PY: '3.9'

jobs:
  ci:
    name: Continuous Integration
    runs-on: ${{ matrix.os }}
    # container: thebjorn/pydeps-agent:ci-${{ matrix.python-version }}
    outputs:
      package_version: ${{ steps.proj_ver_determiner.outputs.package_version }}
      package_version_tag: ${{ steps.proj_ver_determiner.outputs.package_version_tag }}
      latest_github_tag: ${{ steps.proj_ver_determiner.outputs.latest_github_tag }}
      should_deploy: ${{ steps.proj_ver_determiner.outputs.should_deploy }}
    strategy:
      matrix:
        python-version: [ '2.7', '3.9', '3.10.0-rc.2' ]
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      PYVER: ${{ matrix.python-version}}
      LOGDIR: ./ghlogs/${{ matrix.python-version}}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ts-graphviz/setup-graphviz@v1

      - name: setup directories
        shell: bash
        run: |
          mkdir -p $PIP_CACHE_DIR
          mkdir -p $LOGDIR
          touch $LOGDIR/hello-world.txt

      - name: printenv
        shell: python
        run: |
          import os,sys
          print(sys.version_info)
          for k, v in os.environ.items():
              print(k, v)
      
      - name: pipinstall
        run: |
          pip install -r requirements.txt
          pip list | tee $LOGDIR/pip-list.log

      - name: rundot
        run: dot -Tsvg -o $LOGDIR/ab.svg ab.dot

      - name: yamldirs
        run: yamldirs .
        
      - name: printlogdir
        shell: bash
        run: |
          pwd
          ls -l .
          ls -l ./ghlogs
